Resources:
  MediaBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      CorsConfiguration:
        CorsRules: [
          {
            "AllowedOrigins": ["*"],
            "AllowedMethods": ["GET"],
            "MaxAge": 3000,
            "AllowedHeaders": ["Authoirzation"]
          }
        ]
      WebsiteConfiguration:
        ErrorDocument: error.html
        IndexDocument: index.html
  MediaUser:
    Type: AWS::IAM::User
  MediaPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: { "Ref" : "MediaBucket" }
      PolicyDocument:
        Statement: [
           {
              "Sid": "FullAccess",
              "Effect": "Allow",
              "Principal": {
                "AWS" : { "Fn::GetAtt" : [ "MediaUser", "Arn" ] }
              },
              "Action": [
                 "s3:*"
              ],
              "Resource": [
                 { "Fn::Join" : ["", [ "arn:aws:s3:::", { "Ref" : "MediaBucket" } , "/*" ]] }
              ]
           },
           {
              "Sid": "ReadOnlyForAnonymous",
              "Effect": "Allow",
              "Principal": {
                "AWS" : "*"
              },
              "Action": [
                 "s3:GetObject"
              ],
              "Resource": [
                 { "Fn::Join" : ["", [ "arn:aws:s3:::", { "Ref" : "MediaBucket" } , "/*" ]] }
              ]
           }
        ]
  MediaAccess:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: { "Ref" : "MediaUser" }

Outputs:
  MediaWebsiteURL:
    Description : "URL for media hosted on S3"
    Value : {"Fn::GetAtt": [ "MediaBucket", "WebsiteURL"]}
  MediaSecureURL:
    Description : "Name of S3 bucket to hold media content"
    Value : { "Fn::Join" : ["", [ "https://", { "Fn::GetAtt" : [ "MediaBucket", "DomainName" ] } ]] }
  MediaDomainName:
    Description: "Media domain name"
    Value: { "Fn::GetAtt" : [ "MediaBucket", "DomainName" ] }
  MediaAccessKey:
    Description: "The media s3 bucket access key"
    Value: { "Ref" : "MediaAccess" }
  MediaSecretKey:
    Description: "The media secret key for media bucket"
    Value: { "Fn::GetAtt" : [ "MediaAccess", "SecretAccessKey" ] }